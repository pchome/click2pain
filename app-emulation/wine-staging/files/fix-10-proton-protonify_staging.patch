--- a/10-proton-protonify_staging.patch
+++ b/10-proton-protonify_staging.patch
@@ -5441,154 +5441,6 @@ index 20c55558fa5..db6e16ae435 100644
  #if 0
  		CRYPT_Free(pProv->pVTable->pContextInfo);
  #endif
-From 8ec69866810c5fa605915a0be77796e89ab3f72b Mon Sep 17 00:00:00 2001
-From: Paul Gofman <pgofman@codeweavers.com>
-Date: Thu, 14 Oct 2021 17:51:51 +0300
-Subject: [PATCH] winhttp: Process end of read data before sending callback in
- read_data().
-
-CW-Bug-ID: #19544
-
-Fixes Fallout76 random crash on start.
----
- dlls/winhttp/request.c | 2 +-
- 1 file changed, 1 insertion(+), 1 deletion(-)
-
-diff --git a/dlls/winhttp/request.c b/dlls/winhttp/request.c
-index c795a26d1a4..353c0ed3f60 100644
---- a/dlls/winhttp/request.c
-+++ b/dlls/winhttp/request.c
-@@ -1845,6 +1845,7 @@ static DWORD read_data( struct request *request, void *buffer, DWORD size, DWORD
-
- done:
-     TRACE( "retrieved %u bytes (%u/%u)\n", bytes_read, request->content_read, request->content_length );
-+    if (end_of_read_data( request )) finished_reading( request );
-     if (async)
-     {
-         if (!ret) send_callback( &request->hdr, WINHTTP_CALLBACK_STATUS_READ_COMPLETE, buffer, bytes_read );
-@@ -1858,7 +1859,6 @@ static DWORD read_data( struct request *request, void *buffer, DWORD size, DWORD
-     }
-
-     if (!ret && read) *read = bytes_read;
--    if (end_of_read_data( request )) finished_reading( request );
-     return ret;
- }
-
-From 050bcf50ef3349114b291d84d6f49aaef4165750 Mon Sep 17 00:00:00 2001
-From: Paul Gofman <pgofman@codeweavers.com>
-Date: Fri, 15 Oct 2021 16:59:48 +0300
-Subject: [PATCH] winhttp: Don't send notifications when connection is closed
- on read finish.
-
-CW-Bug-ID: #19544
-
-Signed-off-by: Paul Gofman <pgofman@codeweavers.com>
-Signed-off-by: Hans Leidekker <hans@codeweavers.com>
-Signed-off-by: Alexandre Julliard <julliard@winehq.org>
-(cherry picked from commit d349013ddea1c407189cd22df2a4ff8bf025085b)
----
- dlls/winhttp/request.c            | 10 ++++------
- dlls/winhttp/tests/notification.c | 32 ++++++++-----------------------
- 2 files changed, 12 insertions(+), 30 deletions(-)
-
-diff --git a/dlls/winhttp/request.c b/dlls/winhttp/request.c
-index 353c0ed3f60..a2a5774d74d 100644
---- a/dlls/winhttp/request.c
-+++ b/dlls/winhttp/request.c
-@@ -1792,13 +1792,11 @@ static void finished_reading( struct request *request )
-         if (!wcsicmp( connection, L"close" )) close = TRUE;
-     }
-     else if (!wcscmp( request->version, L"HTTP/1.0" )) close = TRUE;
--    if (close)
--    {
--        close_connection( request );
--        return;
--    }
-
--    cache_connection( request->netconn );
-+    if (close)
-+        netconn_close( request->netconn );
-+    else
-+        cache_connection( request->netconn );
-     request->netconn = NULL;
- }
-
-diff --git a/dlls/winhttp/tests/notification.c b/dlls/winhttp/tests/notification.c
-index e6e7e0b21e7..9392ddccab8 100644
---- a/dlls/winhttp/tests/notification.c
-+++ b/dlls/winhttp/tests/notification.c
-@@ -1112,32 +1112,15 @@ static const struct notification read_test[] =
-     { winhttp_read_data,        WINHTTP_CALLBACK_STATUS_READ_COMPLETE, NF_SIGNAL }
- };
-
--static const struct notification read_allow_close_test[] =
--{
--    { winhttp_read_data,        WINHTTP_CALLBACK_STATUS_RECEIVING_RESPONSE, NF_ALLOW },
--    { winhttp_read_data,        WINHTTP_CALLBACK_STATUS_RESPONSE_RECEIVED, NF_ALLOW },
--    { winhttp_read_data,        WINHTTP_CALLBACK_STATUS_CLOSING_CONNECTION, NF_ALLOW },
--    { winhttp_read_data,        WINHTTP_CALLBACK_STATUS_CONNECTION_CLOSED, NF_ALLOW },
--    { winhttp_read_data,        WINHTTP_CALLBACK_STATUS_READ_COMPLETE, NF_SIGNAL }
--};
--
--#define read_request_data(a,b,c,d) _read_request_data(a,b,c,d,__LINE__)
--static void _read_request_data(struct test_request *req, struct info *info, const char *expected_data, BOOL closing_connection, unsigned line)
-+#define read_request_data(a,b,c) _read_request_data(a,b,c,__LINE__)
-+static void _read_request_data(struct test_request *req, struct info *info, const char *expected_data, unsigned line)
- {
-     char buffer[1024];
-     DWORD len;
-     BOOL ret;
-
--    if (closing_connection)
--    {
--        info->test = read_allow_close_test;
--        info->count = ARRAY_SIZE( read_allow_close_test );
--    }
--    else
--    {
--        info->test = read_test;
--        info->count = ARRAY_SIZE( read_test );
--    }
-+    info->test = read_test;
-+    info->count = ARRAY_SIZE( read_test );
-     info->index = 0;
-
-     setup_test( info, winhttp_read_data, line );
-@@ -1168,7 +1151,7 @@ static void test_persistent_connection(int port)
-                        "Content-Length: 1\r\n"
-                        "\r\n"
-                        "X" );
--    read_request_data( &req, &info, "X", FALSE );
-+    read_request_data( &req, &info, "X" );
-     close_request( &req, &info, FALSE );
-
-     /* chunked connection test */
-@@ -1182,7 +1165,7 @@ static void test_persistent_connection(int port)
-                        "\r\n"
-                        "9\r\n123456789\r\n"
-                        "0\r\n\r\n" );
--    read_request_data( &req, &info, "123456789", FALSE );
-+    read_request_data( &req, &info, "123456789" );
-     close_request( &req, &info, FALSE );
-
-     /* HTTP/1.1 connections are persistent by default, no additional header is needed */
-@@ -1194,7 +1177,7 @@ static void test_persistent_connection(int port)
-                        "Content-Length: 2\r\n"
-                        "\r\n"
-                        "xx" );
--    read_request_data( &req, &info, "xx", FALSE );
-+    read_request_data( &req, &info, "xx" );
-     close_request( &req, &info, FALSE );
-
-     open_async_request( port, &req, &info, L"/test", TRUE );
-@@ -1206,6 +1189,7 @@ static void test_persistent_connection(int port)
-                        "Connection: close\r\n"
-                        "\r\n"
-                        "yy" );
-+    read_request_data( &req, &info, "yy" );
-     close_request( &req, &info, TRUE );
-
-     SetEvent( server_socket_done );
 From 04bb9112d2d540452068d1e22d4faf51fe11f351 Mon Sep 17 00:00:00 2001
 From: Arkadiusz Hiler <ahiler@codeweavers.com>
 Date: Mon, 8 Nov 2021 19:38:33 +0200
